# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A9hfmNzNS2QTGxU2Omlx3048tvfsl8-O
"""

# Import and Upload Dataset
import pandas as pd
import spacy
from google.colab import files
from transformers import pipeline

uploaded = files.upload()
df = pd.read_csv("hotel_reviews_aspect_dataset_3001.csv")
print("Loaded dataset:")
print(df.head())

# Load Models
nlp = spacy.load("en_core_web_sm")

# zero-shot for multi-class sentiment (positive, negative)
classifier = pipeline("zero-shot-classification", model="facebook/bart-large-mnli")

# common aspects
aspects = ['room', 'food', 'service', 'location', 'price']

# helper functions
def find_aspects(text):
    found = []
    for aspect in aspects:
        if aspect in text.lower():
            found.append(aspect)
    return found

# Convert zero-shot scores to sentiment
def get_sentiment_zero_shot(text):
    candidate_labels = ["positive", "negative", "neutral"]
    result = classifier(text, candidate_labels)
    return result['labels'][0]  # highest confidence label

# Process each sentence for aspect & sentiment
results = []

for review in df['review']:
    doc = nlp(review)
    for sent in doc.sents:
        sentence = sent.text.strip()
        matched_aspects = find_aspects(sentence)
        if matched_aspects:
            try:
                sentiment = get_sentiment_zero_shot(sentence)
                for aspect in matched_aspects:
                    results.append({
                        "Sentence": review,
                        "Aspect": aspect,
                        "Sentiment": sentiment
                    })
            except:
                continue

# Save Results
result_df = pd.DataFrame(results)
print(result_df.head(10))

result_df.to_csv("aspect_sentiment_transformer_output.csv", index=False)
files.download("aspect_sentiment_transformer_output.csv")

# After results got it corrected by AI to compare the correctrd and the output for accuracy
import pandas as pd
from sklearn.metrics import accuracy_score, classification_report

# Upload files via Colab file upload widget
from google.colab import files
uploaded = files.upload()

# Load both datasets
original_df = pd.read_csv("aspect_sentiment_transformer_output-2.csv")
corrected_df = pd.read_csv("aspect_sentiment_transformer_output_corrected.csv")

# Check if the rows align
assert len(original_df) == len(corrected_df), "Datasets have different lengths!"

# Compute accuracy
accuracy = accuracy_score(corrected_df['Sentiment'], original_df['Sentiment'])
print(f"Model Accuracy: {accuracy:.2%}")

# Detailed classification report
print("\nClassification Report:")
print(classification_report(corrected_df['Sentiment'], original_df['Sentiment']))
